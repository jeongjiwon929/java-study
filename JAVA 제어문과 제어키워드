제어문
제어문의 개념
- 일반적인 프로그램 처리 방식
실행문 1 :
실행문 2 :
실행문 3 :
...
실행문 N :
(순차처리)

TIP! 모든 제어문은 중괄호({})를 가짐
단, 중괄호 안의 실행문이 1개인 경우 생략 가능
(컴파일러에 의해서 자동으로 삽입)

선택 제어문
if, switch
반복 제어문
for, while, do-while

제어 키워드
1. break
2. continue

if 제어문 (선택제어문)
if(조건식) {   // boolean(true, false) 타입만 가능
    실행내용; // 조건식이 true일 때만 실행
}
----------------------------------------------------------------------------------------------
if(조건식) {   // boolean(true, false) 타입만 가능
    실행내용; // 조건식이 true일 때만 실행
}
else {
    실행내용; // 조건식이 false일 때만 실행 => 생략 가능
}
-----------------------------------------------------------------------------------------------
if(조건식1) {   // boolean(true, false) 타입만 가능
    실행내용; // 조건식이 true일 때만 실행
}
else if(조건식2) {
    실행내용; // 조건식이 false일 때만 실행 => 생략 가능
}
else if(조건식3) {
    실행내용; // 조건식이 false일 때만 실행 => 생략 가능
}
...
else {
    실행내용; // 모든 조건식이 false일 때 실행
}

switch 제어문
tip! 0개 이상의 case 절과 0이나 1개의 default 절로 구성
연산식 : 정수, 문자, 문자열
콜론(:)의 개념적 의미
- 이정표의 역할 (점프위치 표시)
- 삼항연산자, case, 레이블 및 람다식
switch문 탈출을 위해서는 break 키워드 사용


for 제어문
tip! for문의 경우 반복 횟수가 정해진 경우 주로 사용
(for문을 보면 반복횟수를 알 수 있어야 함)

while 제어문
while 문에서는 조건식 생략 불가
무한루프가 아닌 경우 초기식, 조건식, 증감식 포함되어야 함


do-while 제어문
do-while 문은 제어문 중 유일하게 세미콜론(;)으로 마침
중괄호({})로 끝나지 않기 때문!!

